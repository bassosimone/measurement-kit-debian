#!/usr/bin/env python

from __future__ import print_function
import hashlib
import re
import sys

SHA1_RE = re.compile(r"^ [a-f0-9]{40} [0-9]+ (measurement-kit_[0-9.a-z-]+.dsc)$")
SHA256_RE = re.compile(r"^ [a-f0-9]{64} [0-9]+ (measurement-kit_[0-9.a-z-]+.dsc)$")
MD5_RE = re.compile(r"^ [a-f0-9]{32} [0-9]+( [a-z-]+ [a-z-]+ )(measurement-kit_[0-9a-z.-]+.dsc)$")

def recompute_hash(name, extra, hash_type):
    with open(name, "r") as fp:
        content = fp.read()
        sha = hash_type()
        sha.update(content)
        return " {} {}{}{}".format(sha.hexdigest(), len(content), extra, fp.name)

def main():
    for line in open(sys.argv[1], "r"):
        line = line.rstrip()
        match = SHA1_RE.match(line)
        if match:
            line = recompute_hash(match.group(1), " ", hashlib.sha1)
            print(line)
            continue
        match = SHA256_RE.match(line)
        if match:
            line = recompute_hash(match.group(1), " ", hashlib.sha256)
            print(line)
            continue
        match = MD5_RE.match(line)
        if match:
            line = recompute_hash(match.group(2), match.group(1), hashlib.md5)
            print(line)
            continue
        print(line)

if __name__ == "__main__":
    main()
